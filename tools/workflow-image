#!/usr/bin/env node

'use strict';

var fs = require('fs');
var spawn = require('child_process').spawn;
var stream = require('stream');

var FakeDatabaseService = require('./fake-database-service');

var argv = require('yargs')
    .help('h')
    .alias('h', 'help')
    .usage('Usage: $0 <filename> -o [path]')
    .demand(1)
    .example('$0 examples/def/trade_area_atm_machines.json -o image.png', 'generate workflow representation')
    .demand('o')
    .alias('o', 'output')
    .argv;

var Analysis = require('../lib/analysis');
var graphviz = require('../lib/util/graphviz');

var filename = argv._[0];
if (!filename) {
    console.error('Must specify a json file');
    process.exit(1);
}
if (!fs.existsSync(filename)) {
    console.error('File "%s" does not exist', filename);
    process.exit(1);
}
filename = fs.realpathSync(filename);

var outputPath = argv.output;

var analysisDefinition = require(filename);

new Analysis(FakeDatabaseService).create({}, analysisDefinition, function (err, analysis) {
    if (err) {
        console.error('Error happened: %s', err.message || 'unknown error');
        process.exit(1);
    }

    var dotSpawn = spawn('dot', ['-T', 'png', '-o', outputPath]);
    dotSpawn.stdout.on('end', process.exit.bind(process, 0));

    var bufferStream = new stream.PassThrough();
    bufferStream.end(new Buffer(graphviz.dotFromNode(analysis.getRoot())));
    bufferStream.pipe(dotSpawn.stdin);
});
